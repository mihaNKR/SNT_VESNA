{"ast":null,"code":"var _jsxFileName = \"/workspaces/SNT_VESNA/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport LoginForm from \"./components/LoginForm\";\nimport MeterForm from \"./components/MeterForm\";\nimport MeterList from \"./components/MeterList\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [readings, setReadings] = useState([]);\n  useEffect(() => {\n    if (token) {\n      // Получаем пользователя и показания\n      axios.get(\"/api/me\", {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => setUser(res.data)).catch(() => setToken(\"\"));\n      axios.get(\"/api/meters\", {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => setReadings(res.data));\n    }\n  }, [token]);\n  const handleLogin = async (email, password) => {\n    const res = await axios.post(\"/api/login\", {\n      email,\n      password\n    });\n    setToken(res.data.token);\n    localStorage.setItem(\"token\", res.data.token);\n  };\n  const handleLogout = () => {\n    setToken(\"\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setReadings([]);\n  };\n  const handleAddReading = async value => {\n    await axios.post(\"/api/meters\", {\n      value\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    // Обновить список показаний\n    const res = await axios.get(\"/api/meters\", {\n      headers: {\n        Authorization: token\n      }\n    });\n    setReadings(res.data);\n  };\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442 \\u0441\\u0430\\u0434\\u043E\\u0432\\u043E\\u0434\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeterForm, {\n      onAdd: handleAddReading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeterList, {\n      readings: readings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IqZfVIHfSX97BZgiAUjEHGpHVWY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginForm","MeterForm","MeterList","axios","jsxDEV","_jsxDEV","App","_s","user","setUser","token","setToken","localStorage","getItem","readings","setReadings","get","headers","Authorization","then","res","data","catch","handleLogin","email","password","post","setItem","handleLogout","removeItem","handleAddReading","value","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","children","onClick","onAdd","_c","$RefreshReg$"],"sources":["/workspaces/SNT_VESNA/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport LoginForm from \"./components/LoginForm\";\nimport MeterForm from \"./components/MeterForm\";\nimport MeterList from \"./components/MeterList\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [readings, setReadings] = useState([]);\n\n  useEffect(() => {\n    if (token) {\n      // Получаем пользователя и показания\n      axios.get(\"/api/me\", { headers: { Authorization: token } })\n        .then(res => setUser(res.data))\n        .catch(() => setToken(\"\"));\n      axios.get(\"/api/meters\", { headers: { Authorization: token } })\n        .then(res => setReadings(res.data));\n    }\n  }, [token]);\n\n  const handleLogin = async (email, password) => {\n    const res = await axios.post(\"/api/login\", { email, password });\n    setToken(res.data.token);\n    localStorage.setItem(\"token\", res.data.token);\n  };\n\n  const handleLogout = () => {\n    setToken(\"\");\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setReadings([]);\n  };\n\n  const handleAddReading = async (value) => {\n    await axios.post(\"/api/meters\", { value }, { headers: { Authorization: token } });\n    // Обновить список показаний\n    const res = await axios.get(\"/api/meters\", { headers: { Authorization: token } });\n    setReadings(res.data);\n  };\n\n  if (!token) {\n    return <LoginForm onLogin={handleLogin} />;\n  }\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Личный кабинет садовода</h2>\n      <button onClick={handleLogout}>Выйти</button>\n      <MeterForm onAdd={handleAddReading} />\n      <MeterList readings={readings} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}